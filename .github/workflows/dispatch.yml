name: "Dispatch"

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    name: "Check Versions"
    runs-on: ubuntu-latest
    steps:

    - name: ⬇ Checkout
      uses: actions/checkout@v3

    - id: my_latestrelease
      name: 🔎 Get My Version
      uses: jneilliii/github-action-get-latest-release@master
      with:
        repository: ${{ github.repository }}
        token: ${{ secrets.REPODISPATCH_TOKEN }}

    - id: octoprint_latestrelease
      name: 🔎 Get OctoPrint Version
      uses: jneilliii/github-action-get-latest-release@master
      with:
        repository: OctoPrint/OctoPrint
        excludes: prerelease, draft
        token: ${{ secrets.REPODISPATCH_TOKEN }}

    - id: octopi_latestrelease
      name: 🔎 Get OctoPi Version
      uses: jneilliii/github-action-get-latest-release@master
      with:
        repository: guysoft/OctoPi
        excludes: prerelease, draft
        token: ${{ secrets.REPODISPATCH_TOKEN }}

    - id: simplyprint_latestrelease
      name: 🔎 Get SimplyPrint Version
      uses: jneilliii/github-action-get-latest-release@master
      with:
        repository: SimplyPrint/OctoPrint-SimplyPrint
        excludes: prerelease, draft
        token: ${{ secrets.REPODISPATCH_TOKEN }}

    - name: 💁 Print Versions
      run: |
        echo "my version: ${{ steps.my_latestrelease.outputs.release }}"
        echo "octoprint version: ${{ steps.octoprint_latestrelease.outputs.release }}"
        echo "octopi version: ${{ steps.octopi_latestrelease.outputs.release }}"
        echo "SimplyPrint version: ${{ steps.simplyprint_latestrelease.outputs.release }}"

    - name: 🚀 Repository Dispatch
      if: ${{ format('{0}.op{1}.sp{2}', steps.octopi_latestrelease.outputs.release, steps.octoprint_latestrelease.outputs.release, steps.simplyprint_latestrelease.outputs.release) != steps.my_latestrelease.outputs.release }}
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.REPODISPATCH_TOKEN }}
        repository: SimplyPrint/SimplyPi
        event-type: octoprint_release
        client-payload: '{"version": "${{ steps.octoprint_latestrelease.outputs.release }}"}'
